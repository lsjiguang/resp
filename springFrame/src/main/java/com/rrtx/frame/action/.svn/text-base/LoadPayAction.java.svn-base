package com.zte.pay.action;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;

import com.zte.pay.domain.LoadPayRequest;
import com.zte.pay.domain.LoadPayResponse;
import com.zte.pay.domain.Request;
import com.zte.pay.domain.Response;
import com.zte.pay.exception.ZTEPayException;
import com.zte.pay.service.CommService;
import com.zte.pay.service.LoadPayService;
import com.zte.pay.util.Crypt;
 

/**
 * @ClassName: LoadPayAction 
 * @Description: 圈存交易，对应交易码为 1007
 * @author qijia
 * @date 2013-5-13 下午5:23:04
 * @version	1.0
 */
@Controller
public class LoadPayAction extends AbstractAction<LoadPayRequest, LoadPayResponse> {

	@Resource
	LoadPayService loadPayService;
	@Resource
	private CommService commService;
	
	@Override
	public Response execute(Request request) {
		
		LoadPayResponse response=new LoadPayResponse();
		LoadPayRequest req=(LoadPayRequest)request;
		String ztePWD=Crypt.Decrypt(req.getPayPassword());
		
		try {
			//检查用户是否存在
			if(commService.checkCustomerExistByToken(req.getTokenId())){
				String custID = commService.getCustomerNoByNFPToken(req.getTokenId()); 
				//用SHA1加密 custID+ztePWD
				req.setPayPassword(Crypt.SHA1Crypt(custID+ztePWD)); 
			}
			response = loadPayService.LoadPay((LoadPayRequest)request);
			response.getResponseHeader().success="true";
		} catch (ZTEPayException e) {
			TellException2Client(e, response);
		}
		return response;
	}

}
